<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDI â€“ PDI::Reference_base class reference</title>
    <link>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/</link>
    <description>Recent content in PDI::Reference_base class reference on PDI</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: PDI::Reference_base::Referenced_buffer struct reference</title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_buffer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_buffer/</guid>
      <description>
        
        
        &lt;p&gt;A descriptor for a buffer in which references can point.&lt;/p&gt;
&lt;p&gt;Both locking and memory management happen at this granularity.&lt;/p&gt;
&lt;h2 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_buffer-stdfunction-void-bool-bool&#34;&gt;&lt;code&gt; Referenced_buffer ( std::function&lt; void()&gt;, bool, bool )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Constructs a new buffer descriptor. &lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_buffer&#34;&gt;&lt;code&gt; Referenced_buffer ()&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_buffer-const-referenced_buffer-&#34;&gt;&lt;code&gt; Referenced_buffer ( const Referenced_buffer &amp; )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_buffer-referenced_buffer-&#34;&gt;&lt;code&gt; Referenced_buffer ( Referenced_buffer &amp;&amp; )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_buffer&#34;&gt;&lt;code&gt; ~Referenced_buffer ()&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Detailed Documentation&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_buffer-stdfunction-void-bool-bool&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_buffer&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;std::function&amp;lt; void()&amp;gt;&lt;/span&gt; &lt;a href=&#34;#referenced_buffer-stdfunction-void-bool-bool-_-deleter&#34;&gt;&lt;var class=&#34;nv&#34;&gt;deleter&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;a href=&#34;#referenced_buffer-stdfunction-void-bool-bool-_-readable&#34;&gt;&lt;var class=&#34;nv&#34;&gt;readable&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;a href=&#34;#referenced_buffer-stdfunction-void-bool-bool-_-writable&#34;&gt;&lt;var class=&#34;nv&#34;&gt;writable&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Constructs a new buffer descriptor.&lt;/p&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_buffer-stdfunction-void-bool-bool-_-deleter&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;deleter&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the function to use to deallocate the buffer memory&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_buffer-stdfunction-void-bool-bool-_-readable&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;readable&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;whether it is allowed to read the content&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_buffer-stdfunction-void-bool-bool-_-writable&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;writable&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;whether it is allowed to write the content&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_buffer&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_buffer&lt;/nf&gt; (  )&lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_buffer-const-referenced_buffer-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_buffer&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;const Referenced_buffer &amp;amp;&lt;/span&gt; &lt;a href=&#34;#referenced_buffer-const-referenced_buffer--_-&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_buffer-const-referenced_buffer--_-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_buffer-referenced_buffer-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_buffer&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;Referenced_buffer &amp;amp;&amp;amp;&lt;/span&gt; &lt;a href=&#34;#referenced_buffer-referenced_buffer--_-&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_buffer-referenced_buffer--_-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_buffer&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;~Referenced_buffer&lt;/nf&gt; (  )&lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: PDI::Reference_base::Referenced_data struct reference</title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_data/</guid>
      <description>
        
        
        &lt;p&gt;A descriptor for data on which references can point.&lt;/p&gt;
&lt;p&gt;The content type is handled at this granularity&lt;/p&gt;
&lt;h2 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h2&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data-referenced_buffer--void--datatype_uptr&#34;&gt;&lt;code&gt; Referenced_data ( Referenced_buffer *, void *, Datatype_uptr )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Constructs a new data descriptor from an already referenced buffer. &lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool&#34;&gt;&lt;code&gt; Referenced_data ( void *, std::function&lt; void(void *)&gt;, bool, Datatype_uptr, bool )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Constructs a new data descriptor. &lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data&#34;&gt;&lt;code&gt; Referenced_data ()&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data-const-referenced_data-&#34;&gt;&lt;code&gt; Referenced_data ( const Referenced_data &amp; )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data-referenced_data-&#34;&gt;&lt;code&gt; Referenced_data ( Referenced_data &amp;&amp; )&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;#referenced_data&#34;&gt;&lt;code&gt; ~Referenced_data ()&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Detailed Documentation&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data-referenced_buffer--void--datatype_uptr&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_data&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;Referenced_buffer *&lt;/span&gt; &lt;a href=&#34;#referenced_data-referenced_buffer--void--datatype_uptr-_-buffer&#34;&gt;&lt;var class=&#34;nv&#34;&gt;buffer&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;void *&lt;/span&gt; &lt;a href=&#34;#referenced_data-referenced_buffer--void--datatype_uptr-_-data&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;a href=&#34;#referenced_data-referenced_buffer--void--datatype_uptr-_-type&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Constructs a new data descriptor from an already referenced buffer.&lt;/p&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-referenced_buffer--void--datatype_uptr-_-buffer&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;buffer&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the buffer containing the data&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-referenced_buffer--void--datatype_uptr-_-data&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the data location&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-referenced_buffer--void--datatype_uptr-_-type&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the data&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_data&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;void *&lt;/span&gt; &lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-data&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;std::function&amp;lt; void(void *)&amp;gt;&lt;/span&gt; &lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-freefunc&#34;&gt;&lt;var class=&#34;nv&#34;&gt;freefunc&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-readable&#34;&gt;&lt;var class=&#34;nv&#34;&gt;readable&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-type&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/a&gt;,   &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;a href=&#34;#referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-writable&#34;&gt;&lt;var class=&#34;nv&#34;&gt;writable&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Constructs a new data descriptor.&lt;/p&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-data&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the data location&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-freefunc&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;freefunc&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the function to use to free the data buffer&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-readable&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;readable&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the maximum allowed access to the underlying content&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-type&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the data&lt;/dd&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-void--stdfunction-voidvoid--bool-datatype_uptr-bool-_-writable&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;writable&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;the maximum allowed access to the underlying content&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_data&lt;/nf&gt; (  )&lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data-const-referenced_data-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_data&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;const Referenced_data &amp;amp;&lt;/span&gt; &lt;a href=&#34;#referenced_data-const-referenced_data--_-&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-const-referenced_data--_-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data-referenced_data-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Referenced_data&lt;/nf&gt; (    &lt;span class=&#34;kt&#34;&gt;Referenced_data &amp;amp;&amp;amp;&lt;/span&gt; &lt;a href=&#34;#referenced_data-referenced_data--_-&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/a&gt;  )&lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt&gt;&lt;h5 id=&#34;referenced_data-referenced_data--_-&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/h5&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;referenced_data&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kt&#34;&gt;&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;~Referenced_data&lt;/nf&gt; (  )&lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
  </channel>
</rss>
