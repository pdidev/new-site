<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDI â€“ </title>
    <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/</link>
    <description>Recent content on PDI</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Array_datatype&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
an &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; that represents an array: i.e storage of multiple elements of the same type continuously in memory.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/index_accessor/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Index_accessor&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accessor to get single element from array.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/slice_accessor/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Slice_accessor&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accessor to get a slice of an array, returns array of the same subtype.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#array_datatype~arg~size_t~arg~size_t~arg~size_t~arg~datatype_uptr&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Array_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subsize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Construct a new partially filled &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#array_datatype~arg~size_t~arg~datatype_uptr&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Array_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Construct a new completely filled &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#alignment&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the required alignment for a type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#buffersize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, including potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#clone&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#clone_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a sparse deep copy of dense data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a dense deep copy of data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#datasize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, excluding potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#debug_string&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the datatype yaml representation as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#dense&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indicate if the datatype is dense or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#densify&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as the dense copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#destroy_data~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Function used to delete the data behind the datatype.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#evaluate~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype by resolving the value of all metadata references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for equality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#simple&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#size&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Number of elements the array can store.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#start&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;id of the first actual element of the array&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#subsize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subsize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Number of actual elements in the array.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/#subtype&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Type of the elements contained in the array.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;array_datatype~arg~size_t~arg~size_t~arg~size_t~arg~datatype_uptr&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Array_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;start&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subsize&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Construct a new partially filled &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the number of elements the array can store&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;start&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the id of the first actual element of the array&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;subsize&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the number of actual elements in the array&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;subtype&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the elements contained in the array&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;array_datatype~arg~size_t~arg~datatype_uptr&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Array_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Construct a new completely filled &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the number of elements the array can store&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;subtype&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the elements contained in the array&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;alignment&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the required alignment for a type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;buffersize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, including potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a sparse deep copy of dense data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a dense deep copy of data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datasize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, excluding potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;debug_string&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the datatype yaml representation as a string.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype yaml representation as a string&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dense&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Indicate if the datatype is dense or not.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;whether the datatype is dense&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;densify&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as the dense copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;destroy_data~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Function used to delete the data behind the datatype.
This should not deallocate the memory.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ptr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;to the data to free&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;evaluate~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype by resolving the value of all metadata references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate this template&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the evaluated type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for equality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are equal&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;simple&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if data has trivial copier and destroyer, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;size&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Number of elements the array can store.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the number of elements the array can store&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;start&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;start&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
id of the first actual element of the array
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the id of the first actual element of the array&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_begin&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the begin of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_end&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the end of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer moved by offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subsize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subsize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Number of actual elements in the array.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the number of actual elements in the array&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subtype&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Type of the elements contained in the array.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type of the elements contained in the array&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Callbacks&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#callbacks~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#add_data_callback~arg~const-stdfunction-voidconst-stdstring--ref-~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_data_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new data callback to context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#add_data_remove_callback~arg~const-stdfunction-voidconst-stdstring--ref-~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_data_remove_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new data callback to context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#add_empty_desc_access_callback~arg~const-stdfunction-voidconst-stdstring--~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_empty_desc_access_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new empty desc access callback to context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#add_event_callback~arg~const-stdfunction-voidconst-stdstring--~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_event_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new event callback to context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#add_init_callback~arg~const-stdfunction-void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_init_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new init callback to context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#call_data_callbacks~arg~const-stdstring-~arg~ref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_data_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls data callbacks.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#call_data_remove_callbacks~arg~const-stdstring-~arg~ref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_data_remove_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls data remove callbacks.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#call_empty_desc_access_callbacks~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_empty_desc_access_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls empty desc callbacks.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#call_event_callbacks~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_event_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls event callbacks.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/#call_init_callbacks&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_init_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Calls init callbacks.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;callbacks~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_data_callback~arg~const-stdfunction-voidconst-stdstring--ref-~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_data_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;{}&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new data callback to context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;callback&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function to call when data is being available&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the name of the data on which call the callback, if not specified it&#39;s called on any data&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;function that removes callback&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_data_remove_callback~arg~const-stdfunction-voidconst-stdstring--ref-~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_data_remove_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;{}&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new data callback to context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;callback&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function to call when data is reclaimed/released&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the name of the data on which call the callback, if not specified it&#39;s called on any data&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;function that removes callback&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_empty_desc_access_callback~arg~const-stdfunction-voidconst-stdstring--~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_empty_desc_access_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;{}&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new empty desc access callback to context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;callback&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function to call when event is called&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the name of the data on which call the callback, if not specified it&#39;s called on any data&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;function that removes callback&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_event_callback~arg~const-stdfunction-voidconst-stdstring--~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_event_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;{}&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new event callback to context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;callback&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function to call when event is called&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the name of the event on which call the callback, if not specified it&#39;s called on any event&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;function that removes callback&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_init_callback~arg~const-stdfunction-void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_init_callback&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;callback&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new init callback to context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;callback&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function to call when data and metadata are loaded&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;function that removes callback&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;call_data_callbacks~arg~const-stdstring-~arg~ref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_data_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Calls data callbacks.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the shared descriptor&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ref&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;shared reference&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;call_data_remove_callbacks~arg~const-stdstring-~arg~ref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_data_remove_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Calls data remove callbacks.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the descriptor that will be reclaimed/released&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ref&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;reference that will be reclaimed/released&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;call_empty_desc_access_callbacks~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_empty_desc_access_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Calls empty desc callbacks.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the accessed descriptor&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;call_event_callbacks~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_event_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Calls event callbacks.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the event&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;call_init_callbacks&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;call_init_callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Calls init callbacks.
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Config_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/#config_error~arg~args-~arg~const-s-~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;tree&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/#config_error~arg~config_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/#config_error~arg~const-config_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;config_error~arg~args-~arg~const-s-~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;tree&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;config_error~arg~config_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;config_error~arg~const-config_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Config_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Context&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_template_parser&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A function that parses a PC_tree_t to create a datatype_template.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/iterator/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Iterator&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;An iterator used to go through the descriptor store.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#add_datatype~arg~const-stdstring-~arg~datatype_template_parser&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_template_parser&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds new datatype parser to the context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#begin&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns an iterator on the first descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#callbacks&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;compound:classPDI_1_1Callbacks&#34;&gt;Callbacks&lt;/a&gt; of the context.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#datatype~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype template from a paraconf-style config.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#desc~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accesses the descriptor for a specific name.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#desc~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accesses the descriptor for a specific name.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#end&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns an iterator past the last descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#event~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Triggers a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; &amp;quot;event&amp;quot;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#finalize_and_exit&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;finalize_and_exit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Finalizes &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; and exits application.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#logger&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Logger getter.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#operator~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accesses the descriptor for a specific name.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#operator~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accesses the descriptor for a specific name.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/#context&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Context&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_datatype~arg~const-stdstring-~arg~datatype_template_parser&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_parser&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;parser&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds new datatype parser to the context.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the datatype to add&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;parser&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;function that creates new datatype_template from PC_tree_t&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;begin&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns an iterator on the first descriptor.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;callbacks&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;compound:classPDI_1_1Callbacks&#34;&gt;Callbacks&lt;/a&gt; of the context.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;context callbacks&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datatype~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;node&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype template from a paraconf-style config.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;node&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the configuration to read&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type generated&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;desc~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Accesses the descriptor for a specific name.
Might be uninitialized
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;desc~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Accesses the descriptor for a specific name.
Might be uninitialized
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;end&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns an iterator past the last descriptor.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;event~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Triggers a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; &amp;quot;event&amp;quot;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the event name&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;finalize_and_exit&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;finalize_and_exit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Finalizes &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; and exits application.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;logger&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Logger getter.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;logger&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Accesses the descriptor for a specific name.
Might be uninitialized
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Accesses the descriptor for a specific name.
Might be uninitialized
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;context&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Context&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Context_proxy&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#context_proxy~arg~context-~arg~pc_tree_t~arg~stdstring&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Context_proxy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;logging_tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plugin_name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#add_datatype~arg~const-stdstring-~arg~datatype_template_parser&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_template_parser&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;parser&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1a49ae5a3b3cb8d97b0f61e6a3dd9b0fd6&#34;&gt;Context::add_datatype&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#begin&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1af3cc6b4e8ecd9bc50b933527ccd5af19&#34;&gt;Context::begin&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#callbacks&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1ab1739cf4e3bfde11d5271b305fa17e20&#34;&gt;Context::callbacks&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#datatype~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1a886658fd95d713981ac77c0b7dde31f0&#34;&gt;Context::datatype&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#desc~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1ad9cc865b0a004cf218c2633d3907e231&#34;&gt;Context::desc&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#desc~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1ad9cc865b0a004cf218c2633d3907e231&#34;&gt;Context::desc&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#end&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1ac987d27496498d563359f97ea9ec5416&#34;&gt;Context::end&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#event~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1afb530384d29404ab88a3c4210d03f19d&#34;&gt;Context::event&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#finalize_and_exit&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;finalize_and_exit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Finalizes &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; and exits application.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#logger&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns local logger.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#operator~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1af6b22d500d77d171fea9b5eb66b02c80&#34;&gt;Context::operator[]&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#operator~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1af6b22d500d77d171fea9b5eb66b02c80&#34;&gt;Context::operator[]&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/#pdi_core_logger&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;pdi_core_logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;a href=&#34;member:classPDI_1_1Context_1a5e78992507def6399403ab6fe3704320&#34;&gt;Context::logger&lt;/a&gt; proxy for plugins.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;context_proxy~arg~context-~arg~pc_tree_t~arg~stdstring&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Context_proxy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;logging_tree&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;plugin_name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;logging_tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;plugin_name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;add_datatype~arg~const-stdstring-~arg~datatype_template_parser&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;add_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_parser&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;parser&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1a49ae5a3b3cb8d97b0f61e6a3dd9b0fd6&#34;&gt;Context::add_datatype&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;parser&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;begin&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1af3cc6b4e8ecd9bc50b933527ccd5af19&#34;&gt;Context::begin&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;callbacks&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Callbacks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;callbacks&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1ab1739cf4e3bfde11d5271b305fa17e20&#34;&gt;Context::callbacks&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datatype~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;node&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1a886658fd95d713981ac77c0b7dde31f0&#34;&gt;Context::datatype&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;node&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;desc~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1ad9cc865b0a004cf218c2633d3907e231&#34;&gt;Context::desc&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;desc~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;desc&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1ad9cc865b0a004cf218c2633d3907e231&#34;&gt;Context::desc&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;end&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Iterator&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1ac987d27496498d563359f97ea9ec5416&#34;&gt;Context::end&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;event~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;event&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1afb530384d29404ab88a3c4210d03f19d&#34;&gt;Context::event&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;finalize_and_exit&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;finalize_and_exit&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Finalizes &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; and exits application.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;logger&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns local logger.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1af6b22d500d77d171fea9b5eb66b02c80&#34;&gt;Context::operator[]&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Data_descriptor&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1af6b22d500d77d171fea9b5eb66b02c80&#34;&gt;Context::operator[]&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;pdi_core_logger&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;pdi_core_logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
&lt;a href=&#34;member:classPDI_1_1Context_1a5e78992507def6399403ab6fe3704320&#34;&gt;Context::logger&lt;/a&gt; proxy for plugins.
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Data_descriptor&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#default_type~arg~datatype_template_uptr&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;default_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Set the datatype template used to type raw pointers shared through this descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#default_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;default_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Access the datatype template used to type raw pointers shared through this descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#empty&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;empty&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks whether this descriptor is empty (contains no reference)&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#metadata&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Return true if the data is a metadata.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#metadata~arg~bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Sets whether this describes a metadata or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#name&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Access the name of the descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#reclaim&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;reclaim&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Reclaims ownership of a data buffer shared with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#ref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Return a reference to the value of the data behind this descriptor.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#release&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;release&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Releases ownership of a data shared with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#share~arg~void-~arg~bool~arg~bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;share&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Shares some data with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#share~arg~bool~arg~ref~arg~bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;share&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;write&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Shares some data with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/#data_descriptor&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Data_descriptor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;default_type~arg~datatype_template_uptr&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;default_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Set the datatype template used to type raw pointers shared through this descriptor.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the datatype template attached to the descriptor&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;default_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;default_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Access the datatype template used to type raw pointers shared through this descriptor.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype template attached to the descriptor&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;empty&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;empty&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks whether this descriptor is empty (contains no reference)
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if empty.&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;metadata&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Return true if the data is a metadata.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;metadata~arg~bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;metadata&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;metadata&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Sets whether this describes a metadata or not.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;metadata&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;whether data shared through this descriptor should behave as a metadata&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;name&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Access the name of the descriptor.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;reclaim&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;reclaim&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Reclaims ownership of a data buffer shared with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the address of the buffer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Return a reference to the value of the data behind this descriptor.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;release&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;release&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Releases ownership of a data shared with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.
&lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; is then responsible to free the associated memory whenever necessary.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;share~arg~void-~arg~bool~arg~bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;share&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;write&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Shares some data with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the shared data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;read&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;whether read access is granted to other references&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;write&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;whether write access is granted to other references&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;share~arg~bool~arg~ref~arg~bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;share&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;read&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ref&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;write&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Shares some data with &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;read&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;whether the stored reference should have read access&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ref&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;a reference to the shared data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;write&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;whether the stored reference should have write access&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the just shared buffer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_descriptor&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Data_descriptor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Datatype&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
A &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype__template&#34;&gt;Datatype_template&lt;/a&gt; that accepts no argument. &lt;p&gt;It represents the memory layout of data and supports some simple operations on it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accessing its content&lt;/li&gt;
&lt;li&gt;cloning and destruction&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/accessor_base/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Accessor_base&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Base class for datatype accesssors, that allow to get pointer to subtype.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#alignment&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the required alignment for a type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#buffersize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, including potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#clone_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a sparse deep copy of dense data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a dense deep copy of data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#datasize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, excluding potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#debug_string&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the datatype yaml representation as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#dense&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indicate if the datatype is dense or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#densify&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as the dense copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#destroy_data~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Function used to delete the data behind the datatype.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator!=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for inequality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for equality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#simple&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#subaccess~arg~const-accessor_base-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#subaccess~arg~const-stdvector-stdunique_ptr-accessor_base--~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/#datatype&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;alignment&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the required alignment for a type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;buffersize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, including potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a sparse deep copy of dense data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a dense deep copy of data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datasize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, excluding potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;debug_string&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the datatype yaml representation as a string.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype yaml representation as a string&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dense&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Indicate if the datatype is dense or not.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;whether the datatype is dense&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;densify&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as the dense copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;destroy_data~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Function used to delete the data behind the datatype.
This should not deallocate the memory.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ptr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;to the data to free&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator!=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for inequality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are different&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for equality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are equal&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;simple&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if data has trivial copier and destroyer, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess~arg~const-accessor_base-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessor&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;accessor&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;accessor to get subtype of datatype&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer with offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess~arg~const-stdvector-stdunique_ptr-accessor_base--~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessors&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;accessors&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;accessors to get nested subtype of datatype&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer with offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_begin&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the begin of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_end&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the end of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer moved by offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datatype&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Datatype_template&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/#clone&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/#evaluate~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype by resolving the value of all metadata references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/#load_basic_datatypes~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;load_basic_datatypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds to the context the basic Array, Record, C and Fortran datatypes.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/#load_user_datatypes~arg~context-~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;load_user_datatypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;types_tree&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Adds to the context the user defined datatypes.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/#datatype_template&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Datatype_template&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Destroys the template.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;evaluate~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype by resolving the value of all metadata references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate this template&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the evaluated type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;load_basic_datatypes~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;load_basic_datatypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds to the context the basic Array, Record, C and Fortran datatypes.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context where to add the datatypes&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;load_user_datatypes~arg~context-~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;load_user_datatypes&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;types_tree&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Adds to the context the user defined datatypes.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context where to add the datatypes&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;types_tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;with defined types&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datatype_template&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Datatype_template&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Destroys the template.
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/#error~arg~pdi_status_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error without a message.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/#error~arg~args-~arg~pdi_status_t~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/#error~arg~pdi_status_t~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/#status&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns status of the error.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/#what&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;what&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;error~arg~pdi_status_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error without a message.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;errcode&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the error code of the error to create&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;error~arg~args-~arg~pdi_status_t~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the python-style parameters for the message&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;errcode&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the error code of the error to create&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;an errror message as a python-style format&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;error~arg~pdi_status_t~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;errcode&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;message&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; error.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;errcode&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the error code of the error to create&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;message&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;an errror message&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;status&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;PDI_status_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;status&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns status of the error.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;status of the error&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;what&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;what&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Expression&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds an empty expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Copies an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Moves an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds (i.e.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds (i.e.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~long&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds an expression that represents an integer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~double&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds an expression that represents a float.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Builds an expression that is parsed from PC_tree_t.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator-bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;operator bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks whether this is an empty expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Modulo operator of an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Multiplication operator of an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;#43;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Summation operator of an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator-~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Subtraction operator of an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Division operator of an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~const-expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Copies an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#operator~arg~expression-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Moves an expression.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#to_double~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Evaluates an expression as a float.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#to_long~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Evaluates an expression as an integer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#to_ref~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Evaluates an expression as a data reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#to_ref~arg~context-~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Evaluates an expression as a data reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#to_string~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Evaluates an expression as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/#expression&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Destroys an expression.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds an empty expression.
No operation can be used on an empty expression, it can only be assigned to
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Copies an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to copy&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Moves an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to move&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds (i.e.
&lt;p&gt;parse) an expression from a string&lt;/p&gt;
&lt;p&gt;The grammar of an expression is as follow:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;/* parsing as a REFERENCE is preferred over OPERATION
   parsing as an OPERATION is preferred over STRING_LITERAL
*/
EXPRESSION     := REFERENCE | OPERATION | STRING_LITERAL
&lt;p&gt;STRING_LITERAL := ( CHAR | &#39;&amp;amp;#39; &#39;&amp;amp;#39; | &#39;&amp;amp;#39; &#39;$&#39;
| REFERENCE
| &#39;$&#39; &#39;(&#39; OPERATION &#39;)&#39;
)*&lt;/p&gt;
&lt;p&gt;/* The operator descending precedence order is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;*, /, %: multiplication, division and modulo,&lt;/li&gt;
&lt;li&gt;+, -: addition and subtraction,&lt;/li&gt;
&lt;li&gt;&amp;lt;, &amp;gt;: less than and greater than,&lt;/li&gt;
&lt;li&gt;=: equality,&lt;/li&gt;
&lt;li&gt;&amp;amp;: logical AND,&lt;/li&gt;
&lt;li&gt;|: logical OR.
&lt;em&gt;/
OPERATION      := TERM ( OPERATOR TERM )&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TERM           := ( INT_LITERAL | REFERENCE | &#39;(&#39; OPERATION &#39;)&#39; )&lt;/p&gt;
&lt;p&gt;REFERENCE      := &#39;$&#39; ( IREFERENCE | &#39;{&#39; IREFERENCE &#39;}&#39; )&lt;/p&gt;
&lt;p&gt;IREFERENCE     := ID ( &#39;[&#39; OPERATION &#39;]&#39; | &#39;.&#39; ID )*&lt;/p&gt;
&lt;p&gt;INT_LITERAL ~= (0x)? [0-9]+ ( .  )
ID          ~= [a-zA-Z_][a-zA-Z0-9_]*
CHAR        ~= [^$\]
OPERATOR    ~= [|&amp;amp;=&amp;lt;&amp;gt;+-*/%]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the string to parse&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds (i.e.
&lt;p&gt;parse) an expression from a string&lt;/p&gt;
&lt;p&gt;The grammar of an expression is as follow:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;/* parsing as a REFERENCE is preferred over OPERATION
   parsing as an OPERATION is preferred over STRING_LITERAL
*/
EXPRESSION     := REFERENCE | OPERATION | STRING_LITERAL
&lt;p&gt;STRING_LITERAL := ( CHAR | &#39;&amp;amp;#39; &#39;&amp;amp;#39; | &#39;&amp;amp;#39; &#39;$&#39;
| REFERENCE
| &#39;$&#39; &#39;(&#39; OPERATION &#39;)&#39;
)*&lt;/p&gt;
&lt;p&gt;/* The operator descending precedence order is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;*, /, %: multiplication, division and modulo,&lt;/li&gt;
&lt;li&gt;+, -: addition and subtraction,&lt;/li&gt;
&lt;li&gt;&amp;lt;, &amp;gt;: less than and greater than,&lt;/li&gt;
&lt;li&gt;=: equality,&lt;/li&gt;
&lt;li&gt;&amp;amp;: logical AND,&lt;/li&gt;
&lt;li&gt;|: logical OR.
&lt;em&gt;/
OPERATION      := TERM ( OPERATOR TERM )&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TERM           := ( INT_LITERAL | REFERENCE | &#39;(&#39; OPERATION &#39;)&#39; )&lt;/p&gt;
&lt;p&gt;REFERENCE      := &#39;$&#39; ( IREFERENCE | &#39;{&#39; IREFERENCE &#39;}&#39; )&lt;/p&gt;
&lt;p&gt;IREFERENCE     := ID ( &#39;[&#39; OPERATION &#39;]&#39; | &#39;.&#39; ID )*&lt;/p&gt;
&lt;p&gt;INT_LITERAL ~= (0x)? [0-9]+ ( .  )
ID          ~= [a-zA-Z_][a-zA-Z0-9_]*
CHAR        ~= [^$\]
OPERATOR    ~= [|&amp;amp;=&amp;lt;&amp;gt;+-*/%]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the string to parse&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~long&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds an expression that represents an integer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the integer value&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~double&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds an expression that represents a float.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the flaot value&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Builds an expression that is parsed from PC_tree_t.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the PC_tree_t value&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator-bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks whether this is an empty expression.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Modulo operator of an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to use modulo&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Expression&#34;&gt;Expression&lt;/a&gt; as a result of modulo&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Multiplication operator of an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to multiply&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Expression&#34;&gt;Expression&lt;/a&gt; as a result of multiplication&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;#43;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Summation operator of an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to add&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Expression&#34;&gt;Expression&lt;/a&gt; as a result of sum&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator-~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Subtraction operator of an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to subtract&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Expression&#34;&gt;Expression&lt;/a&gt; as a result of subtraction&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Division operator of an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to divide&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Expression&#34;&gt;Expression&lt;/a&gt; as a result of division&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Copies an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to copy&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;*this&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~expression-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Expression&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;expr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Moves an expression.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expression to move`&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;*this&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_double~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Evaluates an expression as a float.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the float value&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_long~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Evaluates an expression as an integer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the integer value&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_ref~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Evaluates an expression as a data reference.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate the expression&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the data reference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_ref~arg~context-~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_ref&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Evaluates an expression as a data reference.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate the expression&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the created Ref&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the data reference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_string~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Evaluates an expression as a string.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the string value&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;expression&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Expression&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Destroys an expression.
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Impl_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/#impl_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/#impl_error~arg~impl_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/#impl_error~arg~const-impl_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;impl_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;impl_error~arg~impl_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;impl_error~arg~const-impl_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Impl_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/paraconf_wrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/paraconf_wrapper/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Paraconf_wrapper&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
Automatically installs a paraconf error-handler that ignores errors and uninstalls it on destruction.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-variables-list&#34;&gt;Member Variables&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;no&#34;&gt;m_handler&lt;span&gt;
&lt;/code&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/paraconf_wrapper/#paraconf_wrapper&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Paraconf_wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/paraconf_wrapper/#paraconf_wrapper&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Paraconf_wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;paraconf_wrapper&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Paraconf_wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;paraconf_wrapper&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Paraconf_wrapper&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Plugin&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
The class &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; plugins should implement.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/#plugin~arg~const-plugin-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/#plugin~arg~plugin-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/#plugin~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Initialization of the plugin.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/#context&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;context&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Provides access to the &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; context for this plugin instance.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/#plugin&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin~arg~const-plugin-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin~arg~plugin-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Initialization of the plugin.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; context for this plugin instance&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;context&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;context&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Provides access to the &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; context for this plugin instance.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Plugin&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Plugin_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/#plugin_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/#plugin_error~arg~plugin_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/#plugin_error~arg~const-plugin_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin_error~arg~plugin_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin_error~arg~const-plugin_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Plugin_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Pointer_datatype&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/accessor/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Accessor&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#pointer_datatype~arg~datatype_uptr&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Pointer_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#pointer_datatype~arg~stdfunction-void-void--const-void-~arg~stdfunction-voidvoid-~arg~datatype_uptr&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Pointer_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;destroy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#alignment&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the required alignment for a type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#buffersize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, including potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#clone&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#clone_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a sparse deep copy of dense data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a dense deep copy of data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#datasize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, excluding potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#debug_string&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the datatype yaml representation as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#dense&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indicate if the datatype is dense or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#densify&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as the dense copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#dereference&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dereference&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#destroy_data~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Function used to delete the data behind the datatype.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#evaluate~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype by resolving the value of all metadata references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for equality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#simple&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/#subtype&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Type of the pointed element.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;pointer_datatype~arg~datatype_uptr&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Pointer_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;subtype&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;pointer_datatype~arg~stdfunction-void-void--const-void-~arg~stdfunction-voidvoid-~arg~datatype_uptr&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Pointer_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;copy&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;destroy&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;subtype&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;copy&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;destroy&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;subtype&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;alignment&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the required alignment for a type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;buffersize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, including potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a sparse deep copy of dense data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a dense deep copy of data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datasize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, excluding potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;debug_string&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the datatype yaml representation as a string.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype yaml representation as a string&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dense&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Indicate if the datatype is dense or not.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;whether the datatype is dense&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;densify&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as the dense copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dereference&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dereference&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;destroy_data~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Function used to delete the data behind the datatype.
This should not deallocate the memory.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ptr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;to the data to free&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;evaluate~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype by resolving the value of all metadata references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate this template&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the evaluated type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for equality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are equal&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;simple&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if data has trivial copier and destroyer, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_begin&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the begin of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_end&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the end of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer moved by offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subtype&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subtype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Type of the pointed element.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type of the pointed element&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Record_datatype&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
A &lt;a href=&#34;compound:classPDI_1_1Record__datatype&#34;&gt;Record_datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; that represents a fixed number of elements of potentially different types layed out in a specific way in memory. Each element is given a name to access it.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/member/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Member&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/member_accessor/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Member_accessor&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#record_datatype~arg~stdvector-member--~arg~size_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Record_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Member&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;members&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Constructs a new &lt;a href=&#34;compound:classPDI_1_1Record__datatype&#34;&gt;Record_datatype&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#alignment&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the required alignment for a type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#buffersize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, including potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#clone&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#clone_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a sparse deep copy of dense data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a dense deep copy of data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#datasize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, excluding potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#debug_string&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the datatype yaml representation as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#dense&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indicate if the datatype is dense or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#densify&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as the dense copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#destroy_data~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Function used to delete the data behind the datatype.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#evaluate~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype by resolving the value of all metadata references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#members&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Member&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;members&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Accesses the members in increasing displacement order.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for equality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#simple&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/#subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates datatype of subtype and returns it with a moved pointer.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;record_datatype~arg~stdvector-member--~arg~size_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Record_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Member&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;members&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Constructs a new &lt;a href=&#34;compound:classPDI_1_1Record__datatype&#34;&gt;Record_datatype&lt;/a&gt;.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;members&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the members for the newly created &lt;a href=&#34;compound:classPDI_1_1Record__datatype&#34;&gt;Record_datatype&lt;/a&gt; in increasing displacement order&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the total size of the buffer containing all members&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;alignment&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the required alignment for a type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;buffersize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, including potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a sparse deep copy of dense data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a dense deep copy of data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datasize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, excluding potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;debug_string&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the datatype yaml representation as a string.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype yaml representation as a string&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dense&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Indicate if the datatype is dense or not.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;whether the datatype is dense&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;densify&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as the dense copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;destroy_data~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Function used to delete the data behind the datatype.
This should not deallocate the memory.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ptr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;to the data to free&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;evaluate~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype by resolving the value of all metadata references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate this template&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the evaluated type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;members&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Member&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;members&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Accesses the members in increasing displacement order.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for equality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are equal&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;simple&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if data has trivial copier and destroyer, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;subaccess_by_iterators~arg~void-~arg~stdvector-stdunique_ptr-accessor_base-const_iterator~arg~stdvector-stdunique_ptr-accessor_base-const_iterator&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;subaccess_by_iterators&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_begin&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;const_iterator&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;remaining_end&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates datatype of subtype and returns it with a moved pointer.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the data&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_begin&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the begin of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;remaining_end&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;iterator to the end of remaining accessors&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;pointer moved by offset and new datatype&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Ref_any&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
A dynamically typed reference to data with automatic memory management and read/write locking semantic. &lt;p&gt;&lt;a href=&#34;compound:classPDI_1_1Ref__any&#34;&gt;Ref_any&lt;/a&gt; is a smart pointer that features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a dynamic type system,&lt;/li&gt;
&lt;li&gt;garbage collection mechanism similar to std::shared_ptr,&lt;/li&gt;
&lt;li&gt;a read/write locking mechanism similar to std::shared_mutex,&lt;/li&gt;
&lt;li&gt;a release system that nullifies all existing references to the raw data,&lt;/li&gt;
&lt;li&gt;a notification system to be notified when a reference is going to be nullified.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{{% alert %}}
As of now, and unlike std::shared_ptr, the lock system can not be relied upon in a multithreaded environment.
{{% /alert %}}&lt;/p&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Constructs a null reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~const-ref_any-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Copies an existing reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~const-ref_any-or-ow--&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Copies an existing reference with different privileges.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~ref_any-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Moves an existing reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~void-~arg~stdfunction-voidvoid-~arg~bool~arg~datatype_uptr~arg~bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;freefunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;readable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;writable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a reference to currently unreferenced data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~const-datatypeaccessor_base-~arg~ref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a subreference from reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any~arg~const-stdvector-stdunique_ptr-datatypeaccessor_base--~arg~ref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a subreference from reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#copy&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Makes a copy of the raw content behind this reference and returns a new reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#get&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_access&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;W&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Offers access to the referenced raw data, throws on null references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#get~arg~stdnothrow_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_access&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;W&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nothrow_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Offers access to the referenced raw data, returns null for null references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#on_nullify~arg~stdfunction-voidref&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;on_nullify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;notifier&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Registers a nullification callback.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator-bool&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;operator bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks whether this is a null reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator-typename-ref_access-r-w-type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;operator typename Ref_access&amp;lt; R, W &amp;gt;::type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Offers access to the referenced raw data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator!=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~ref_any-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-ref_any-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-reference_base-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;member_name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create a sub-reference to a member in case the content behind the ref is a record.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~const-char-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;member_name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create a sub-reference to a member in case the content behind the ref is a record.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~stdsize_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create a sub-reference to the content at a given index in case the content behind the ref is an array.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#operator~arg~stdpair-stdsize_t-stdsize_t-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;slice&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create a sub-reference to the content at a given slice in case the content behind the ref is an array.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#release&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;release&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Releases ownership of the referenced raw data by nullifying all existing references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#reset&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;reset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Nullify the reference.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#scalar_value&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;scalar_value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns a scalar value of type T taken from the data buffer.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/#ref_any&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;~Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Destructor.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Constructs a null reference.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~const-ref_any-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Copies an existing reference.
if the requested rights can not be granted, the reference is made null
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the ref to copy&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~const-ref_any-or-ow--&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OW&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Copies an existing reference with different privileges.
if the requested rights can not be granted, the reference is made null
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the ref to copy&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~ref_any-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Moves an existing reference.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the ref to copy&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~void-~arg~stdfunction-voidvoid-~arg~bool~arg~datatype_uptr~arg~bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;data&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;freefunc&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;readable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;type&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;writable&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a reference to currently unreferenced data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;data&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the raw data to reference&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;freefunc&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the function to use to free the data buffer&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;readable&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the maximum allowed access to the underlying content&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;type&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the type of the referenced data, ownership will be taken&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;writable&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the maximum allowed access to the underlying content&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~const-datatypeaccessor_base-~arg~ref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessor&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a subreference from reference.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;accessor&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;accessor to use to create subreference&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;source reference&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any~arg~const-stdvector-stdunique_ptr-datatypeaccessor_base--~arg~ref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unique_ptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Accessor_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;accessors&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a subreference from reference.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;accessors&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;vector of accessor to use to create subreference&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;source reference&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;copy&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Makes a copy of the raw content behind this reference and returns a new reference.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;a new reference to a copy of the raw data this references&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;get&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_access&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;W&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Offers access to the referenced raw data, throws on null references.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;a pointer to the referenced raw data&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;get~arg~stdnothrow_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_access&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;W&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nothrow_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Offers access to the referenced raw data, returns null for null references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;a pointer to the referenced raw data&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;on_nullify~arg~stdfunction-voidref&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;on_nullify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;notifier&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Registers a nullification callback.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;notifier&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the function to call when this reference becomes null&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator-bool&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks whether this is a null reference.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator-typename-ref_access-r-w-type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator typename Ref_access&amp;lt; R, W &amp;gt;::type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Offers access to the referenced raw data.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator!=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;lt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~ref_any-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-ref_any-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-reference_base-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator&amp;gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Reference_base&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;o&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;o&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;member_name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Create a sub-reference to a member in case the content behind the ref is a record.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;member_name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;member to make a subref for&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;created subreference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-char-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;member_name&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Create a sub-reference to a member in case the content behind the ref is a record.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;member_name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;member to make a subref for&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;created subreference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~stdsize_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;index&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Create a sub-reference to the content at a given index in case the content behind the ref is an array.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;index&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;index to make a subref for&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;created subreference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~stdpair-stdsize_t-stdsize_t-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator[]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;slice&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Create a sub-reference to the content at a given slice in case the content behind the ref is an array.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;slice&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;pair with start and end index&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;created subreference&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;release&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;release&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Releases ownership of the referenced raw data by nullifying all existing references.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the previously referenced raw data or nullptr if this was a null reference, i.e. the value which would be returned by &lt;a href=&#34;member:classPDI_1_1Ref__any_1ad8d6851233a405e0e1c27d2e762c6cb9&#34;&gt;get()&lt;/a&gt; before the call.&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;reset&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;reset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Nullify the reference.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;scalar_value&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;scalar_value&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns a scalar value of type T taken from the data buffer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;value taken from the data buffer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;ref_any&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;~Ref_any&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Destructor.
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Reference_base&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
A common base for all references, whatever their access privileges. This ensure all reference, even with different type because of differing access privileges, can access the content at this level in each other.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-types-list&#34;&gt;Member Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_buffer/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Referenced_buffer&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A descriptor for a buffer in which references can point.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/referenced_data/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Referenced_data&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A descriptor for data on which references can point.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/#hash&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/#type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;accesses the type of the referenced raw data&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;hash&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;hash&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
accesses the type of the referenced raw data
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Right_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/#right_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/#right_error~arg~right_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/#right_error~arg~const-right_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;right_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;right_error~arg~right_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;right_error~arg~const-right_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Right_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Scalar_datatype&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#scalar_datatype~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#scalar_datatype~arg~size_t~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#scalar_datatype~arg~size_t~arg~stdfunction-void-void--const-void-~arg~size_t~arg~stdfunction-voidvoid-~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;align&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;copy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;dense_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;destroy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#alignment&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the required alignment for a type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#buffersize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, including potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#clone&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#clone_type&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as an exact copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a sparse deep copy of dense data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a dense deep copy of data.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#datasize&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Computes the data size of a type, excluding potentially unused memory from a sparse type.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#debug_string&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the datatype yaml representation as a string.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#dense&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Indicate if the datatype is dense or not.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#densify&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype as the dense copy of this one.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#destroy_data~arg~void-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Function used to delete the data behind the datatype.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#evaluate~arg~context-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Creates a new datatype by resolving the value of all metadata references.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#kind&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;kind&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Interpretation of the content.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#operator~arg~const-datatype-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Test for equality.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/#simple&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;scalar_datatype~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;kind&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;scalar_datatype~arg~size_t~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;align&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;align&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;kind&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;scalar_datatype~arg~size_t~arg~stdfunction-void-void--const-void-~arg~size_t~arg~stdfunction-voidvoid-~arg~scalar_kind~arg~size_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Scalar_datatype&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;align&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;copy&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;dense_size&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;destroy&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;kind&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;size&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;align&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;copy&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dense_size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;destroy&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;kind&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;size&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;alignment&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;alignment&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the required alignment for a type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;buffersize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;buffersize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, including potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;clone_type&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;clone_type&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as an exact copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the dense type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_from_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_from_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a sparse deep copy of dense data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;data_to_dense_copy~arg~const-void-~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;data_to_dense_copy&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;to&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a dense deep copy of data.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;from&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the copied data (size of buffersize)&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;to&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the pointer to the allocated memory to fill (dense data)&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;updated â€˜toâ€™ pointer&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;datasize&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;size_t&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;datasize&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Computes the data size of a type, excluding potentially unused memory from a sparse type.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the size in bytes&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;debug_string&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;debug_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the datatype yaml representation as a string.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the datatype yaml representation as a string&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;dense&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;dense&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Indicate if the datatype is dense or not.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;whether the datatype is dense&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;densify&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;densify&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype as the dense copy of this one.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;destroy_data~arg~void-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;destroy_data&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ptr&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Function used to delete the data behind the datatype.
This should not deallocate the memory.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ptr&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;to the data to free&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;evaluate~arg~context-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;evaluate&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;ctx&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Creates a new datatype by resolving the value of all metadata references.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;ctx&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context in which to evaluate this template&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the evaluated type that is produced&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;kind&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;n&#34;&gt;Scalar_kind&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;kind&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Interpretation of the content.
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;operator~arg~const-datatype-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;operator==&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;other&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Test for equality.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;other&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; to compare&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if the &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt;&amp;rsquo;s are equal&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;simple&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;simple&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
 &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Tells if data can be copied as bytes (if type is dense) and doesn&#39;t need a destroyer.
&lt;/section&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if data has trivial copier and destroyer, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;State_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/#state_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/#state_error~arg~state_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/#state_error~arg~const-state_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;state_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;state_error~arg~state_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;state_error~arg~const-state_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;System_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/#system_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/#system_error~arg~system_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/#system_error~arg~const-system_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;system_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;system_error~arg~system_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;system_error~arg~const-system_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;System_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Type_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/#type_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/#type_error~arg~type_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/#type_error~arg~const-type_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;type_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;type_error~arg~type_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;type_error~arg~const-type_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Type_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Unavailable_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/#unavailable_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/#unavailable_error~arg~unavailable_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/#unavailable_error~arg~const-unavailable_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;unavailable_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;unavailable_error~arg~unavailable_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;unavailable_error~arg~const-unavailable_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Unavailable_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span class=&#34;p&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nc&#34;&gt;Value_error&lt;/span&gt;&lt;/code&gt;&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-list&#34;&gt;Member Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/#value_error~arg~args-~arg~const-s-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/#value_error~arg~value_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/#value_error~arg~const-value_error-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;member-functions-doc&#34;&gt;Member Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;value_error~arg~args-~arg~const-s-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Args&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;span class=&#34;nv&#34;&gt;args&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;S&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;format_str&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;args&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;format_str&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;value_error~arg~value_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;n&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;value_error~arg~const-value_error-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;result&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;span class=&#34;parameter&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Value_error&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;div class=&#34;parameter&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;
&lt;/div&gt;
&lt;/dl&gt;
&lt;/article&gt;

      </description>
    </item>
    
  </channel>
</rss>
