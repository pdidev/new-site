<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PDI â€“ </title>
    <link>http://pdi.julien-bigot.fr/new-site/docs/ref/</link>
    <description>Recent content on PDI</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="http://pdi.julien-bigot.fr/new-site/docs/ref/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: </title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/</guid>
      <description>
        
        
        &lt;h1&gt;
&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kn&#34;&gt;namespace&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;PDI&lt;span&gt;
&lt;/code&gt; reference&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;types-list&#34;&gt;Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/array_datatype/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Array_datatype&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;an &lt;a href=&#34;compound:classPDI_1_1Array__datatype&#34;&gt;Array_datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; that represents an array: i.e storage of multiple elements of the same type continuously in memory.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/callbacks/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Callbacks&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/config_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Config_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Context&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/context_proxy/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Context_proxy&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/data_descriptor/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Data_descriptor&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Datatype&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype__template&#34;&gt;Datatype_template&lt;/a&gt; that accepts no argument.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/datatype_template/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Datatype_template&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_template_uptr&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Datatype_uptr&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/expression/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Expression&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/impl_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Impl_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;A shared pointer to a logger instance.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/paraconf_wrapper/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Paraconf_wrapper&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Automatically installs a paraconf error-handler that ignores errors and uninstalls it on destruction.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Plugin&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The class &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt; plugins should implement.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/plugin_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Plugin_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/pointer_datatype/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Pointer_datatype&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/record_datatype/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Record_datatype&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A &lt;a href=&#34;compound:classPDI_1_1Record__datatype&#34;&gt;Record_datatype&lt;/a&gt; is a &lt;a href=&#34;compound:classPDI_1_1Datatype&#34;&gt;Datatype&lt;/a&gt; that represents a fixed number of elements of potentially different types layed out in a specific way in memory.&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/ref_any/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Ref_any&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A dynamically typed reference to data with automatic memory management and read/write locking semantic.&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_r&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_rw&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Ref_w&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/reference_base/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Reference_base&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A common base for all references, whatever their access privileges.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/right_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Right_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/scalar_datatype/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Scalar_datatype&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Scalar_kind&lt;/span&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Different possible interpretations for a scalar.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/state_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;State_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/system_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;System_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/type_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Type_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/unavailable_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Unavailable_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/value_error/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Value_error&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;variables-list&#34;&gt;Variables&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;no&#34;&gt;UNDEF_TYPE&lt;span&gt;
&lt;/code&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;h3 id=&#34;functions-list&#34;&gt;Functions&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#configure_logger~arg~pc_tree_t~arg~spdloglevellevel_enum~arg~const-stdstring-&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;configure_logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spdlog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level_enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Reads configuration tree and sets up the logger.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#each~arg~stdfunction-voidpc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Iterates and apply the provided function to all elements of a PC list.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#each~arg~stdfunction-voidpc_tree_t-pc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Iterates and apply the provided function to all elements of a PC mapping.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#each_in_omap~arg~stdfunction-voidpc_tree_t-pc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each_in_omap&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Iterates and apply the provided function to all elements of a PC ordered mapping.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#is_list~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_list&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks if the tree is a list.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#is_map~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_map&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks if the tree is a map.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#is_scalar~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_scalar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks if the tree is a scalar.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#len~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the length of a node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#len~arg~int~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the length of a node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#opt_each~arg~stdfunction-voidpc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;opt_each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Iterates and apply the provided function to all elements of a PC list or directly to the provided element if it is not a list.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#plugin_api_version~arg~unsigned-long&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plugin_api_version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;expected_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Checks compatibility with a plugin API.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_bool~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the boolean value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_bool~arg~bool~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the boolean value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_double~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the floating point value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_double~arg~double~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the floating point value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_long~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the int value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_long~arg~long~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the int value of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_string~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the string content of a scalar node.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/pdi/#to_string~arg~const-stdstring-~arg~pc_tree_t&#34;&gt;&lt;code  class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Returns the string content of a scalar node.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;detailed-documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;h3 id=&#34;functions-doc&#34;&gt;Functions&lt;/h2&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;configure_logger~arg~pc_tree_t~arg~spdloglevellevel_enum~arg~const-stdstring-&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;Logger_sptr&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;configure_logger&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;spdlog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level_enum&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Reads configuration tree and sets up the logger.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;config&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;configuration tree from config file&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;level&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;default level of the logger&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;name&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;name of the module (e.g. global, test, decl_hdf5)&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;a configured logger&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;each~arg~stdfunction-voidpc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Iterates and apply the provided function to all elements of a PC list.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;operation&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the operation to apply to each element of the tree&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the tree containing the list&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;each~arg~stdfunction-voidpc_tree_t-pc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Iterates and apply the provided function to all elements of a PC mapping.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;operation&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the operation to apply to each element of the tree&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the tree containing the mapping&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;each_in_omap~arg~stdfunction-voidpc_tree_t-pc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;each_in_omap&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Iterates and apply the provided function to all elements of a PC ordered mapping.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;operation&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the operation to apply to each element of the tree&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the tree containing the ordered mapping&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;is_list~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_list&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks if the tree is a list.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if tree is a list, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;is_map~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_map&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks if the tree is a map.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if tree is a map, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;is_scalar~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;is_scalar&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks if the tree is a scalar.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;true if tree is a scalar, false otherwise&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;len~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the length of a node.
&lt;ul&gt;
&lt;li&gt;for a sequence: the number of nodes,&lt;/li&gt;
&lt;li&gt;for a mapping: the number of pairs,&lt;/li&gt;
&lt;li&gt;for a scalar: the string length.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;throws an &lt;a href=&#34;compound:classPDI_1_1Error&#34;&gt;Error&lt;/a&gt; if the provided tree is in error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the sequence or mapping&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the length&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;len~arg~int~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the length of a node.
&lt;ul&gt;
&lt;li&gt;for a sequence: the number of nodes,&lt;/li&gt;
&lt;li&gt;for a mapping: the number of pairs,&lt;/li&gt;
&lt;li&gt;for a scalar: the string length.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;returns the default value in case of error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dflt&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the default value in case of error&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the sequence or mapping&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the length&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;opt_each~arg~stdfunction-voidpc_tree_t~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;opt_each&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Iterates and apply the provided function to all elements of a PC list or directly to the provided element if it is not a list.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;operation&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the operation to apply to the elements&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the tree containing the list or the single element&lt;/dd&gt;
&lt;/dl&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;plugin_api_version~arg~unsigned-long&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;plugin_api_version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;expected_version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Checks compatibility with a plugin API.
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;expected_version&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the expected version of the API or 0 for no check&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the version of the API provided by &lt;a href=&#34;compound:namespacePDI&#34;&gt;PDI&lt;/a&gt;&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_bool~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the boolean value of a scalar node.
throws an &lt;a href=&#34;compound:classPDI_1_1Error&#34;&gt;Error&lt;/a&gt; if the provided tree is in error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the boolean value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_bool~arg~bool~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_bool&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the boolean value of a scalar node.
returns the default value in case of error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dflt&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the default value in case of error&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the boolean value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_double~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the floating point value of a scalar node.
throws an &lt;a href=&#34;compound:classPDI_1_1Error&#34;&gt;Error&lt;/a&gt; if the provided tree is in error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the floating-point-valued node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the floating point value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_double~arg~double~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_double&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the floating point value of a scalar node.
returns the default value in case of error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dflt&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the default value in case of error&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the floating-point-valued node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the floating point value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_long~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the int value of a scalar node.
throws an &lt;a href=&#34;compound:classPDI_1_1Error&#34;&gt;Error&lt;/a&gt; if the provided tree is in error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the int-valued node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the int value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_long~arg~long~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;to_long&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the int value of a scalar node.
returns the default value in case of error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dflt&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the default value in case of error&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the int-valued node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the int value of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_string~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the string content of a scalar node.
throws an &lt;a href=&#34;compound:classPDI_1_1Error&#34;&gt;Error&lt;/a&gt; if the provided tree is in error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the content of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;article class=&#34;td-content member-function&#34;&gt;
&lt;h3 id=&#34;to_string~arg~const-stdstring-~arg~pc_tree_t&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;to_string&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dflt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PC_tree_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tree&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/h3&gt;
&lt;h4&gt;Description&lt;/h4&gt;
&lt;section class=&#34;description&#34;&gt;
Returns the string content of a scalar node.
returns the default value in case of error
&lt;/section&gt;
&lt;h4&gt;Parameters&lt;/h4&gt;
&lt;dl class=&#34;parameters&#34;&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;dflt&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the default value in case of error&lt;/dd&gt;
&lt;dt class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;var class=&#34;nv&#34;&gt;tree&lt;/var&gt;&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the node&lt;/dd&gt;
&lt;/dl&gt;
&lt;h4 class=&#34;result&#34;&gt;Result&lt;/h4&gt;
&lt;section class=&#34;result&#34;&gt;
&lt;p&gt;the content of the scalar node&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi_errhandler_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/pdi_errhandler_t/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;PDI_errhandler_t&lt;/span&gt;&lt;/code&gt; reference&lt;/h1&gt;
&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
Definition of an error handler.
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;member-variables-list&#34;&gt;Member Variables&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;no&#34;&gt;context&lt;span&gt;
&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;the context that will be provided to the function&lt;/dd&gt;
&lt;dt&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;no&#34;&gt;func&lt;span&gt;
&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;The function to handle the error (none if NULL)&lt;/dd&gt;
&lt;/dl&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/spdlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/spdlog/</guid>
      <description>
        
        
        &lt;h1&gt;
&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kn&#34;&gt;namespace&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;spdlog&lt;span&gt;
&lt;/code&gt; reference&lt;/h1&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>http://pdi.julien-bigot.fr/new-site/docs/ref/std/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://pdi.julien-bigot.fr/new-site/docs/ref/std/</guid>
      <description>
        
        
        &lt;h1&gt;
&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;
&lt;span class=&#34;kn&#34;&gt;namespace&lt;/span&gt;
&lt;span class=&#34;nn&#34;&gt;std&lt;span&gt;
&lt;/code&gt; reference&lt;/h1&gt;
&lt;h2 id=&#34;content-list&#34;&gt;Content&lt;/h2&gt;
&lt;h3 id=&#34;types-list&#34;&gt;Types&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;http://pdi.julien-bigot.fr/new-site/docs/ref/std/hash__pdi__ref_any__r__w____/&#34;&gt;&lt;code class=&#34;chroma language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PDI&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Ref_any&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;W&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;

      </description>
    </item>
    
  </channel>
</rss>
